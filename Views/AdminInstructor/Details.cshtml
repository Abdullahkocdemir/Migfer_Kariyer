@model Migfer_Kariyer.Entities.Instructor
@{
    ViewData["Title"] = "Eğitmen Detayları";
    Layout = "~/Views/Layout/Index.cshtml";
}

<style>
    body {
        font-family: 'Arial', sans-serif;
        background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
        color: #ffffff;
        min-height: 100vh;
        margin: 0;
        padding: 20px;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(15px);
        border: 2px solid #00ffff;
        border-radius: 20px;
        padding: 40px;
        box-shadow: 0 0 30px rgba(0, 255, 255, 0.3);
    }

    .header {
        text-align: center;
        margin-bottom: 40px;
        padding-bottom: 20px;
        border-bottom: 3px solid #6f42c1;
    }

        .header h1 {
            color: #00ffff;
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 0 0 15px #00ffff;
        }

    .back-link {
        margin-bottom: 30px;
    }

        .back-link a {
            color: #6f42c1;
            text-decoration: none;
            font-weight: bold;
            font-size: 16px;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

            .back-link a:hover {
                color: #563d7c;
                transform: translateX(-5px);
            }

    .instructor-preview {
        background: linear-gradient(135deg, #6f42c1, #563d7c);
        color: white;
        border-radius: 15px;
        padding: 40px;
        margin-bottom: 30px;
        text-align: center;
        box-shadow: 0 10px 30px rgba(111, 66, 193, 0.3);
    }

    .instructor-icon-large {
        font-size: 5rem;
        margin-bottom: 20px;
        text-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
        background: rgba(255, 255, 255, 0.2);
        width: 120px;
        height: 120px;
        border-radius: 50%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
    }

    .instructor-title-large {
        font-size: 2.8rem;
        font-weight: bold;
        margin-bottom: 15px;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    }

    .status-badge-large {
        padding: 12px 24px;
        border-radius: 25px;
        font-size: 16px;
        font-weight: bold;
        margin-top: 15px;
        display: inline-block;
    }

    .status-active-large {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        box-shadow: 0 4px 15px rgba(40, 167, 69, 0.4);
    }

    .status-inactive-large {
        background: linear-gradient(135deg, #6c757d, #495057);
        color: white;
        box-shadow: 0 4px 15px rgba(108, 117, 125, 0.4);
    }

    .detail-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 25px;
        margin-bottom: 30px;
    }

    .detail-card {
        background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        padding: 25px;
        border-radius: 15px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        border-left: 5px solid;
    }

        .detail-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.15);
        }

        .detail-card.personal {
            border-left-color: #6f42c1;
        }

        .detail-card.contact {
            border-left-color: #007bff;
        }

        .detail-card.experience {
            border-left-color: #28a745;
        }

    .card-header {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
        gap: 12px;
    }

    .card-icon {
        font-size: 2rem;
        padding: 12px;
        border-radius: 12px;
        color: white;
        box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    }

        .card-icon.personal {
            background: linear-gradient(135deg, #6f42c1, #563d7c);
        }

        .card-icon.contact {
            background: linear-gradient(135deg, #007bff, #0056b3);
        }

        .card-icon.experience {
            background: linear-gradient(135deg, #28a745, #20c997);
        }

    .card-title {
        font-size: 1.3rem;
        font-weight: bold;
        color: #2c3e50;
    }

    .info-row {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        padding: 12px 0;
        border-bottom: 1px solid #dee2e6;
    }

        .info-row:last-child {
            border-bottom: none;
        }

    .info-label {
        font-weight: bold;
        color: #495057;
        flex: 1;
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 14px;
    }

    .info-value {
        flex: 2;
        text-align: right;
        color: #2c3e50;
        font-weight: 500;
        font-size: 14px;
        word-break: break-word;
    }

    .specialization-section {
        background: linear-gradient(135deg, #e8f5e8, #f0f8f0);
        border: 2px solid #6f42c1;
        border-radius: 15px;
        padding: 25px;
        margin: 30px 0;
    }

    .section-title {
        color: #6f42c1;
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 20px;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

    .specialization-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 15px;
    }

    .specialization-card {
        background: white;
        padding: 20px;
        border-radius: 12px;
        border-left: 4px solid #6f42c1;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        text-align: center;
    }

        .specialization-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

    .specialization-icon {
        font-size: 2rem;
        color: #6f42c1;
        margin-bottom: 10px;
    }

    .specialization-name {
        color: #2c3e50;
        font-size: 16px;
        font-weight: bold;
    }

    .education-section {
        background: linear-gradient(135deg, #fff3cd, #ffeaa7);
        border: 2px solid #fd7e14;
        border-radius: 15px;
        padding: 25px;
        margin: 30px 0;
    }

    .education-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
    }

    .education-card {
        background: white;
        padding: 20px;
        border-radius: 12px;
        border-left: 4px solid #fd7e14;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }

        .education-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

    .education-title {
        color: #2c3e50;
        font-size: 16px;
        font-weight: bold;
        margin-bottom: 10px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .no-content {
        text-align: center;
        color: #6c757d;
        font-style: italic;
        padding: 30px;
        background: rgba(108, 117, 125, 0.1);
        border-radius: 10px;
        border: 2px dashed #6c757d;
    }

    .stats-section {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stats-box {
        background: linear-gradient(135deg, #6f42c1, #563d7c);
        color: white;
        padding: 25px;
        border-radius: 15px;
        text-align: center;
        box-shadow: 0 5px 15px rgba(111, 66, 193, 0.3);
    }

    .stats-number {
        font-size: 2.5rem;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .stats-label {
        font-size: 1rem;
        opacity: 0.9;
    }

    .actions {
        text-align: center;
        margin-top: 40px;
        padding-top: 30px;
        border-top: 2px solid #dee2e6;
    }

    .btn {
        display: inline-block;
        padding: 12px 30px;
        margin: 0 10px;
        border-radius: 25px;
        text-decoration: none;
        font-weight: bold;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    }

    .btn-primary {
        background: linear-gradient(135deg, #6f42c1, #563d7c);
        color: white;
    }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(111, 66, 193, 0.4);
        }

    .btn-secondary {
        background: linear-gradient(135deg, #6c757d, #495057);
        color: white;
    }

        .btn-secondary:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(108, 117, 125, 0.4);
        }

    .btn-danger {
        background: linear-gradient(135deg, #dc3545, #c82333);
        color: white;
    }

        .btn-danger:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(220, 53, 69, 0.4);
        }

    .btn-success {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
    }

        .btn-success:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(40, 167, 69, 0.4);
        }

    .empty-value {
        color: #6c757d;
        font-style: italic;
        font-size: 12px;
    }

    @@media (max-width: 768px) {
        .detail-grid

    {
        grid-template-columns: 1fr;
    }

    .specialization-grid {
        grid-template-columns: 1fr;
    }

    .education-grid {
        grid-template-columns: 1fr;
    }

    .stats-section {
        grid-template-columns: repeat(2, 1fr);
    }

    .container {
        margin: 10px;
        padding: 20px;
    }

    .header h1 {
        font-size: 2rem;
    }

    .instructor-title-large {
        font-size: 2.2rem;
    }

    .instructor-icon-large {
        font-size: 4rem;
        width: 100px;
        height: 100px;
    }

    }
</style>

<div class="container">
    <div class="back-link">
        <a asp-action="Index">
            ← Eğitmen Listesine Dön
        </a>
    </div>

    <div class="header">
        <h1>👨‍🏫 Eğitmen Detayları</h1>
    </div>

    <!-- Instructor Preview -->
    <div class="instructor-preview">
        <div class="instructor-icon-large">👨‍🏫</div>
        <div class="instructor-title-large">
            @Model.NameSurname
        </div>
        @if (Model.IsActive)
        {
            <div class="status-badge-large status-active-large">✅ Aktif Eğitmen</div>
        }
        else
        {
            <div class="status-badge-large status-inactive-large">❌ Pasif Eğitmen</div>
        }
    </div>

    <!-- Stats -->
    <div class="stats-section">
        <div class="stats-box">
            <div class="stats-number">@Model.InstructorFieldofSpecializations.Count</div>
            <div class="stats-label">🎯 Uzmanlık Alanı</div>
        </div>

        <div class="stats-box">
            <div class="stats-number">@Model.Educations.Count</div>
            <div class="stats-label">📚 Verdiği Eğitim</div>
        </div>

        <div class="stats-box">
            <div class="stats-number">@Model.InstructorId</div>
            <div class="stats-label">🆔 Eğitmen ID</div>
        </div>

        @if (!string.IsNullOrEmpty(Model.StudentCount))
        {
            <div class="stats-box">
                <div class="stats-number">@Model.StudentCount</div>
                <div class="stats-label">👨‍🎓 Öğrenci Sayısı</div>
            </div>
        }
    </div>

    <!-- Detailed Information -->
    <div class="detail-grid">
        <!-- Personal Info -->
        <div class="detail-card personal">
            <div class="card-header">
                <div class="card-icon personal">👤</div>
                <div class="card-title">Kişisel Bilgiler</div>
            </div>

            <div class="info-row">
                <div class="info-label">
                    🆔 Eğitmen ID
                </div>
                <div class="info-value">
                    #@Model.InstructorId
                </div>
            </div>

            <div class="info-row">
                <div class="info-label">
                    👨‍🏫 Ad Soyad
                </div>
                <div class="info-value">
                    @if (!string.IsNullOrEmpty(Model.NameSurname))
                    {
                        <strong>@Model.NameSurname</strong>
                    }
                    else
                    {
                        <span class="empty-value">Ad soyad belirtilmemiş</span>
                    }
                </div>
            </div>

            <div class="info-row">
                <div class="info-label">
                    📊 Hesap Durumu
                </div>
                <div class="info-value">
                    @if (Model.IsActive)
                    {
                        <span style="color: #28a745; font-weight: bold;">✅ Aktif</span>
                    }
                    else
                    {
                        <span style="color: #6c757d; font-weight: bold;">❌ Pasif</span>
                    }
                </div>
            </div>
        </div>

        <!-- Contact Info -->
        <div class="detail-card contact">
            <div class="card-header">
                <div class="card-icon contact">📞</div>
                <div class="card-title">İletişim Bilgileri</div>
            </div>

            <div class="info-row">
                <div class="info-label">
                    📧 E-posta
                </div>
                <div class="info-value">
                    @if (!string.IsNullOrEmpty(Model.Email))
                    {
                        <strong>@Model.Email</strong>
                    }
                    else
                    {
                        <span class="empty-value">E-posta belirtilmemiş</span>
                    }
                </div>
            </div>

            <div class="info-row">
                <div class="info-label">
                    📱 Telefon
                </div>
                <div class="info-value">
                    @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                    {
                        <strong>@Model.PhoneNumber</strong>
                    }
                    else
                    {
                        <span class="empty-value">Telefon belirtilmemiş</span>
                    }
                </div>
            </div>
        </div>

        <!-- Experience Info -->
        <div class="detail-card experience">
            <div class="card-header">
                <div class="card-icon experience">💼</div>
                <div class="card-title">Deneyim & İstatistikler</div>
            </div>

            <div class="info-row">
                <div class="info-label">
                    🎯 Deneyim
                </div>
                <div class="info-value">
                    @if (!string.IsNullOrEmpty(Model.Experience))
                    {
                        <strong>@Model.Experience</strong>
                    }
                    else
                    {
                        <span class="empty-value">Deneyim bilgisi yok</span>
                    }
                </div>
            </div>

            <div class="info-row">
                <div class="info-label">
                    👨‍🎓 Öğrenci Sayısı
                </div>
                <div class="info-value">
                    @if (!string.IsNullOrEmpty(Model.StudentCount))
                    {
                        <strong>@Model.StudentCount</strong>
                    }
                    else
                    {
                        <span class="empty-value">Öğrenci sayısı belirtilmemiş</span>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Specializations -->
    <div class="specialization-section">
        <div class="section-title">
            🎯 Uzmanlık Alanları (@Model.InstructorFieldofSpecializations.Count)
        </div>

        @if (Model.InstructorFieldofSpecializations != null && Model.InstructorFieldofSpecializations.Any())
        {
            <div class="specialization-grid">
                @foreach (var spec in Model.InstructorFieldofSpecializations.OrderBy(s => s.FieldofSpecialization?.Name))
                {
                    <div class="specialization-card">
                        <div class="specialization-icon">🎯</div>
                        <div class="specialization-name">@spec.FieldofSpecialization?.Name</div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="no-content">
                🎯 Bu eğitmenin henüz uzmanlık alanı belirtilmemiş.<br>
                <small>Eğitmeni düzenleyerek uzmanlık alanları ekleyebilirsiniz.</small>
            </div>
        }
    </div>

    <!-- Educations -->
    <div class="education-section">
        <div class="section-title">
            📚 Verdiği Eğitimler (@Model.Educations.Count)
        </div>

        @if (Model.Educations != null && Model.Educations.Any())
        {
            <div class="education-grid">
                @foreach (var education in Model.Educations.OrderBy(e => e.Name))
                {
                    <div class="education-card">
                        <div class="education-title">
                            📚 @education.Name
                        </div>
                        <div style="font-size: 12px; color: #6c757d; margin-top: 5px;">
                            Aktif eğitim
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="no-content">
                📚 Bu eğitmen henüz hiçbir eğitim vermiyor.<br>
                <small>Eğitim eklerken bu eğitmeni seçebilirsiniz.</small>
            </div>
        }
    </div>

    <!-- Actions -->
    <div class="actions">
        <a asp-action="Edit" asp-route-id="@Model.InstructorId" class="btn btn-primary">
            ✏️ Düzenle
        </a>
        <a asp-action="Index" class="btn btn-secondary">
            📋 Listeye Dön
        </a>
        @if (Model.IsActive)
        {
            <form asp-action="ToggleStatus" asp-route-id="@Model.InstructorId" method="post" style="display: inline;">
                <button type="submit" class="btn btn-secondary"
                        onclick="return confirm('Bu eğitmeni pasif yapmak istediğinizden emin misiniz?')">
                    ❌ Pasif Yap
                </button>
            </form>
        }
        else
        {
            <form asp-action="ToggleStatus" asp-route-id="@Model.InstructorId" method="post" style="display: inline;">
                <button type="submit" class="btn btn-success"
                        onclick="return confirm('Bu eğitmeni aktif yapmak istediğinizden emin misiniz?')">
                    ✅ Aktif Yap
                </button>
            </form>
        }
        @if (!Model.Educations!.Any())
        {
            <a asp-action="Delete" asp-route-id="@Model.InstructorId" class="btn btn-danger"
               onclick="return confirm('Bu eğitmeni silmek istediğinizden emin misiniz?')">
                🗑️ Sil
            </a>
        }
        else
        {
            <button class="btn btn-danger" style="opacity: 0.5; cursor: not-allowed;"
                    onclick="alert('Bu eğitmen @Model.Educations.Count eğitim verdiği için silinemez.')">
                🗑️ Sil (Engellenmiş)
            </button>
        }
    </div>
</div>