@model Migfer_Kariyer.Entities.Instructor
@{
    ViewData["Title"] = "Eğitmen Düzenle";
    Layout = "~/Views/Layout/Index.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <title>Eğitmen Düzenle</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
            color: #ffffff;
            min-height: 100vh;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(15px);
            border: 2px solid #00ffff;
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 0 30px rgba(0, 255, 255, 0.3);
        }

        .back-link {
            margin-bottom: 30px;
        }

            .back-link a {
                color: #00ffff;
                text-decoration: none;
                font-weight: bold;
                transition: all 0.3s ease;
                display: inline-flex;
                align-items: center;
                gap: 0.5rem;
            }

                .back-link a:hover {
                    color: #ff00ff;
                    text-shadow: 0 0 10px #ff00ff;
                }

        h1 {
            color: #00ffff;
            text-align: center;
            margin-bottom: 40px;
            font-size: 2.5rem;
            text-shadow: 0 0 15px #00ffff;
        }

        .info-box {
            background: rgba(0, 255, 255, 0.1);
            border: 1px solid #00ffff;
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            animation: glow 2s ease-in-out infinite alternate;
        }

        @@keyframes glow {
            from {
                box-shadow: 0 0 5px #00ffff;
            }

            to {
                box-shadow: 0 0 20px #00ffff;
            }
        }

        .info-box strong {
            color: #00ffff;
        }

        .info-box ul {
            margin: 10px 0 0 20px;
            color: #cccccc;
        }

        .current-info {
            background: rgba(255, 170, 0, 0.1);
            border: 1px solid #ffaa00;
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
        }

            .current-info strong {
                color: #ffaa00;
            }

        .current-specializations {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 10px;
        }

        .current-spec-tag {
            background: linear-gradient(45deg, #ffaa00, #ff6600);
            color: #000;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: bold;
        }

        .form-section {
            background: rgba(255, 255, 255, 0.03);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 25px;
        }

        .section-title {
            color: #ff00ff;
            font-size: 1.3rem;
            margin-bottom: 20px;
            text-shadow: 0 0 10px #ff00ff;
            border-bottom: 1px solid #ff00ff;
            padding-bottom: 10px;
        }

        .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-group {
            flex: 1;
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #00ff00;
            font-size: 16px;
            text-shadow: 0 0 5px #00ff00;
        }

        input[type="text"], input[type="email"], input[type="tel"], textarea, select {
            width: 100%;
            padding: 12px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid #00ff00;
            border-radius: 8px;
            color: #ffffff;
            font-size: 14px;
            box-sizing: border-box;
            transition: all 0.3s ease;
        }

            input:focus, textarea:focus, select:focus {
                outline: none;
                border-color: #00ffff;
                box-shadow: 0 0 15px rgba(0, 255, 255, 0.5);
                background: rgba(255, 255, 255, 0.15);
            }

            input::placeholder, textarea::placeholder {
                color: #cccccc;
            }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 15px;
        }

            .checkbox-group input[type="checkbox"] {
                width: auto;
                margin-right: 8px;
            }

            .checkbox-group label {
                margin-bottom: 0;
                color: #ffff00;
            }

        .dynamic-fields-container {
            border: 2px dashed #ff00ff;
            border-radius: 15px;
            padding: 25px;
            background: rgba(255, 0, 255, 0.05);
            min-height: 150px;
            position: relative;
        }

        .field-item {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
            background: rgba(255, 255, 255, 0.1);
            padding: 15px;
            border-radius: 10px;
            border: 1px solid #ffff00;
            transition: all 0.3s ease;
        }

            .field-item:hover {
                background: rgba(255, 255, 255, 0.15);
                box-shadow: 0 0 10px rgba(255, 255, 0, 0.3);
            }

        .field-input {
            flex: 1;
            margin-right: 15px;
            padding: 12px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid #ffff00;
            border-radius: 8px;
            color: #ffffff;
        }

            .field-input:focus {
                border-color: #00ffff;
                box-shadow: 0 0 10px rgba(0, 255, 255, 0.3);
            }

        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            text-decoration: none;
            display: inline-block;
            margin-right: 15px;
            transition: all 0.3s ease;
            text-transform: uppercase;
        }

        .btn-add {
            background: linear-gradient(45deg, #00ff00, #00ffff);
            color: #000;
            margin-bottom: 20px;
        }

            .btn-add:hover {
                transform: scale(1.05);
                box-shadow: 0 0 20px #00ff00;
            }

        .btn-remove {
            background: linear-gradient(45deg, #ff0040, #ff4000);
            color: #fff;
            padding: 10px 15px;
            font-size: 14px;
        }

            .btn-remove:hover {
                transform: scale(1.1);
                box-shadow: 0 0 15px #ff0040;
            }

        .btn-primary {
            background: linear-gradient(45deg, #ffaa00, #ff6600);
            color: #fff;
            padding: 15px 40px;
            font-size: 18px;
        }

            .btn-primary:hover {
                transform: scale(1.05);
                box-shadow: 0 0 25px #ffaa00;
            }

        .btn-secondary {
            background: linear-gradient(45deg, #6c757d, #495057);
            color: #fff;
            padding: 15px 40px;
            font-size: 18px;
        }

            .btn-secondary:hover {
                transform: scale(1.05);
                box-shadow: 0 0 20px #6c757d;
            }

        .actions {
            text-align: center;
            margin-top: 50px;
            padding-top: 30px;
            border-top: 2px solid #00ffff;
        }

        .help-text {
            font-size: 12px;
            color: #cccccc;
            margin-top: 5px;
            font-style: italic;
        }

        .validation-summary-errors {
            background: rgba(255, 0, 0, 0.1);
            border: 1px solid #ff4040;
            color: #ff4040;
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 30px;
        }

        .text-danger {
            color: #ff4040 !important;
            font-size: 12px;
            margin-top: 5px;
        }

        .field-counter {
            background: linear-gradient(45deg, #ffff00, #ff00ff);
            color: #000;
            padding: 8px 16px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: bold;
            display: inline-block;
            margin-top: 10px;
            animation: pulse 2s infinite;
        }

        @@keyframes pulse {
            0% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.05);
            }

            100% {
                transform: scale(1);
            }
        }

        .status-indicator {
            position: absolute;
            top: 10px;
            right: 15px;
            width: 15px;
            height: 15px;
            border-radius: 50%;
            background: #ffaa00;
            animation: blink 1s infinite;
        }

        @@keyframes blink {
            0%, 50% {
                opacity: 1;
            }

            51%, 100% {
                opacity: 0.3;
            }
        }

        .changes-indicator {
            background: rgba(255, 170, 0, 0.1);
            border: 1px solid #ffaa00;
            color: #ffaa00;
            padding: 15px;
            border-radius: 10px;
            margin-top: 15px;
            display: none;
        }

        .no-fields-message {
            text-align: center;
            color: #cccccc;
            font-style: italic;
            padding: 30px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 15px;
            border: 2px dashed #666;
        }

        @@media (max-width: 768px) {
            .container {
                margin: 10px;
                padding: 20px;
            }

            .form-row {
                flex-direction: column;
            }

            .field-item {
                flex-direction: column;
                align-items: stretch;
            }

            .field-input {
                margin-right: 0;
                margin-bottom: 15px;
            }

            .current-specializations {
                flex-direction: column;
                align-items: flex-start;
            }

            h1 {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="status-indicator"></div>

        <div class="back-link">
            <a asp-action="Index">
                ← Eğitmen Listesine Dön
            </a>
        </div>

        <h1>
            <span>✏️ EĞİTMEN DÜZENLE</span>
        </h1>

        <div class="info-box">
            <strong>💡 DÜZENLEME MODU:</strong>
            <ul>
                <li><strong>Mevcut Bilgiler:</strong> Aşağıda eğitmenin mevcut bilgileri görüntülenmektedir</li>
                <li><strong>Uzmanlık Alanları:</strong> Mevcut alanlar yüklenir, yeni alanlar ekleyebilir veya mevcut alanları değiştirebilirsiniz</li>
                <li><strong>Otomatik Kayıt:</strong> Değişiklikler kaydedildiğinde eski veriler güncellenir</li>
                <li><strong>Doğrulama:</strong> Tüm zorunlu alanları doldurmayı unutmayın</li>
            </ul>
        </div>

        <!-- Mevcut Bilgiler -->
        <div class="current-info">
            <strong>📋 MEVCUT EĞİTMEN BİLGİLERİ:</strong>
            <div style="margin-top: 15px;">
                <strong>👤 Ad Soyad:</strong> <span>@Model.NameSurname</span><br>
                <strong>📧 E-posta:</strong> <span>@Model.Email</span><br>
                <strong>📱 Telefon:</strong> <span>@Model.PhoneNumber</span><br>
                <strong>🎯 Deneyim:</strong> <span>@Model.Experience</span><br>
                <strong>👥 Öğrenci Sayısı:</strong> <span>@Model.StudentCount</span><br>
                <strong>✅ Durum:</strong> <span>@(Model.IsActive ? "Aktif" : "Pasif")</span>
            </div>
            <div style="margin-top: 15px;">
                <strong>🎨 Mevcut Uzmanlık Alanları:</strong>
                <div class="current-specializations">
                    @if (Model.InstructorFieldofSpecializations != null && Model.InstructorFieldofSpecializations.Any())
                    {
                        @foreach (var spec in Model.InstructorFieldofSpecializations)
                        {
                            <span class="current-spec-tag">@spec.FieldofSpecialization?.Name</span>
                        }
                    }
                    else
                    {
                        <span class="current-spec-tag">Uzmanlık alanı yok</span>
                    }
                </div>
            </div>
        </div>

        <!-- Validation Summary -->
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="validation-summary-errors">
                <strong>⚠️ LÜTFEN AŞAĞIDAKİ HATALARI DÜZELTİN:</strong>
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        <form asp-action="Edit" asp-route-id="@Model.InstructorId" method="post">
            <input type="hidden" asp-for="InstructorId" />

            <!-- Kişisel Bilgiler -->
            <div class="form-section">
                <div class="section-title">👤 KİŞİSEL BİLGİLER</div>

                <div class="form-row">
                    <div class="form-group">
                        <label asp-for="NameSurname">👤 Ad Soyad</label>
                        <input asp-for="NameSurname" placeholder="Eğitmenin adını ve soyadını girin" onchange="detectChanges()" />
                        <span asp-validation-for="NameSurname" class="text-danger"></span>
                        <div class="help-text">Örnek: Mehmet Yılmaz</div>
                    </div>
                    <div class="form-group">
                        <label asp-for="Email">📧 E-posta</label>
                        <input asp-for="Email" placeholder="ornek@email.com" onchange="detectChanges()" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                        <div class="help-text">Geçerli bir e-posta adresi girin</div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label asp-for="PhoneNumber">📱 Telefon Numarası</label>
                        <input asp-for="PhoneNumber" placeholder="+90 555 123 45 67" onchange="detectChanges()" />
                        <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        <div class="help-text">Ulaşılabilir telefon numarası</div>
                    </div>
                    <div class="form-group">
                        <div class="checkbox-group">
                            <input asp-for="IsActive" type="checkbox" onchange="detectChanges()" />
                            <label asp-for="IsActive">✅ Aktif Eğitmen</label>
                        </div>
                        <div class="help-text">Eğitmen sistemde aktif olarak görünsün mü?</div>
                    </div>
                </div>
            </div>

            <!-- Profesyonel Bilgiler -->
            <div class="form-section">
                <div class="section-title">💼 PROFESYONEL BİLGİLER</div>

                <div class="form-row">
                    <div class="form-group">
                        <label asp-for="Experience">🎯 Deneyim</label>
                        <input asp-for="Experience" placeholder="5 yıl, Uzman, vs." onchange="detectChanges()" />
                        <span asp-validation-for="Experience" class="text-danger"></span>
                        <div class="help-text">Eğitmenin deneyim seviyesi</div>
                    </div>
                    <div class="form-group">
                        <label asp-for="StudentCount">👥 Öğrenci Sayısı</label>
                        <input asp-for="StudentCount" placeholder="100+, 500+, vs." onchange="detectChanges()" />
                        <span asp-validation-for="StudentCount" class="text-danger"></span>
                        <div class="help-text">Şimdiye kadar eğitim verdiği öğrenci sayısı</div>
                    </div>
                </div>
            </div>

            <!-- Uzmanlık Alanları -->
            <div class="form-section">
                <div class="section-title">🎯 UZMANLIK ALANLARI</div>

                <div class="form-group">
                    <button type="button" class="btn btn-add" onclick="addSpecializationField()">
                        ➕ YENİ UZMANLIK ALANI EKLE
                    </button>

                    <div class="dynamic-fields-container" id="specializationContainer">
                        <div id="specializationWrapper">
                            <!-- Dinamik alanlar buraya eklenecek -->
                        </div>
                        <div id="noSpecializationMessage" class="no-fields-message">
                            🎨 Henüz uzmanlık alanı eklenmedi.<br>
                            Yukarıdaki "Yeni Uzmanlık Alanı Ekle" butonunu kullanarak başlayın.
                        </div>
                    </div>

                    <div class="field-counter" id="specializationCounter">
                        📊 TOPLAM UZMANLIK ALANI: <span id="specializationCount">0</span>
                    </div>

                    <div class="changes-indicator" id="changesIndicator">
                        ⚡ DEĞİŞİKLİKLER ALGILANDI - Kaydetmeyi unutmayın!
                    </div>

                    <div class="help-text">Eğitmenin uzmanlık alanlarını güncelleyin. Mevcut alanlar otomatik yüklenir, yeni alanlar ekleyebilirsiniz.</div>
                </div>
            </div>

            <div class="actions">
                <button type="submit" class="btn btn-primary">💾 GÜNCELLE</button>
                <a asp-action="Index" class="btn btn-secondary">❌ İPTAL</a>
            </div>
        </form>
    </div>

    <script>
        let specializationCounter = 0;
        let hasChanges = false;

        // Uzmanlık Alanı Ekleme Fonksiyonları
        function addSpecializationField(value = '') {
            const wrapper = document.getElementById('specializationWrapper');
            const noFieldsMsg = document.getElementById('noSpecializationMessage');

            if (specializationCounter === 0) {
                noFieldsMsg.style.display = 'none';
            }

            const fieldDiv = document.createElement('div');
            fieldDiv.className = 'field-item';
            fieldDiv.innerHTML = `
                <input type="text"
                       name="SpecializationFields[${specializationCounter}]"
                       class="field-input"
                       value="${value}"
                       placeholder="🎨 Uzmanlık alanı girin (örn: Web Tasarım, Mobil Uygulama)"
                       onchange="updateSpecializationCount(); detectChanges()" />
                <button type="button" class="btn btn-remove" onclick="removeSpecializationField(this)">
                    🗑️ KALDIR
                </button>
            `;

            wrapper.appendChild(fieldDiv);
            specializationCounter++;
            updateSpecializationCount();
            if (!value) {
                fieldDiv.querySelector('input').focus();
            }
            fieldDiv.style.animation = 'glow 1s ease-in-out';
        }

        function removeSpecializationField(button) {
            const wrapper = document.getElementById('specializationWrapper');
            const noFieldsMsg = document.getElementById('noSpecializationMessage');

            button.parentElement.style.animation = 'fadeOut 0.3s ease-out';
            setTimeout(() => {
                button.parentElement.remove();
                if (wrapper.children.length === 0) {
                    noFieldsMsg.style.display = 'block';
                }
                updateSpecializationCount();
                detectChanges();
            }, 300);
        }

        function updateSpecializationCount() {
            const fields = document.querySelectorAll('#specializationWrapper .field-item input');
            document.getElementById('specializationCount').textContent = fields.length;
        }

        function detectChanges() {
            hasChanges = true;
            document.getElementById('changesIndicator').style.display = 'block';

            // Change button color to indicate unsaved changes
            const saveBtn = document.querySelector('.btn-primary');
            saveBtn.style.background = 'linear-gradient(45deg, #ff4040, #ff6600)';
            saveBtn.textContent = '⚡ GÜNCELLE (DEĞİŞİKLİKLER VAR)';
        }

        // Warning for unsaved changes - DEVRE DIŞI BIRAKILDI
        // window.addEventListener('beforeunload', function(e) {
        //     if (hasChanges) {
        //         e.preventDefault();
        //         e.returnValue = 'Kaydedilmemiş değişiklikler var. Sayfadan çıkmak istediğinizden emin misiniz?';
        //     }
        // });

        // Sayfa yüklendiğinde mevcut uzmanlık alanlarını yükle
        document.addEventListener('DOMContentLoaded', function() {
            // Mevcut uzmanlık alanlarını ekle
            @if (Model.InstructorFieldofSpecializations != null && Model.InstructorFieldofSpecializations.Any())
            {
                    @foreach (var spec in Model.InstructorFieldofSpecializations)
                    {
                            <text>addSpecializationField('@Html.Raw(spec.FieldofSpecialization?.Name?.Replace("'", "\\'"))');</text>
                    }
            }
            else
            {
                    <text>addSpecializationField();</text>
            }

            updateSpecializationCount();

            // Add hover effects to form elements
            document.querySelectorAll('input, textarea, select').forEach(element => {
                element.addEventListener('focus', function() {
                    this.parentElement.style.transform = 'scale(1.02)';
                });

                element.addEventListener('blur', function() {
                    this.parentElement.style.transform = 'scale(1)';
                });
            });

            // Add change detection to all form fields
            document.querySelectorAll('input, textarea, select').forEach(element => {
                element.addEventListener('change', detectChanges);
            });
        });

        // CSS animasyonları
        const style = document.createElement('style');
        style.textContent = `
            @@keyframes fadeOut {
                from { opacity: 1; transform: scale(1); }
                to { opacity: 0; transform: scale(0.8); }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>