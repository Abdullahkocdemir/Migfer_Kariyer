// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Migfer_Kariyer.Data;

#nullable disable

namespace MigferKariyer.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250806090054_Mig_add_end_1")]
    partial class Migaddend1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Migfer_Kariyer.Entities.CourseContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EducationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VarChar");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.ToTable("CourseContents");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseHours")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPopularCourse")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VarChar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VarChar");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("VarChar");

                    b.Property<int>("StudentCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VarChar");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.FieldofSpecialization", b =>
                {
                    b.Property<int>("FieldofSpecializationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FieldofSpecializationId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FieldofSpecializationId");

                    b.ToTable("FieldofSpecializations");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VarChar");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NameSurname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VarChar");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VarChar");

                    b.Property<string>("StudentCount")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VarChar");

                    b.HasKey("InstructorId");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.InstructorFieldofSpecialization", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int>("FieldofSpecializationId")
                        .HasColumnType("int");

                    b.HasKey("InstructorId", "FieldofSpecializationId");

                    b.HasIndex("FieldofSpecializationId");

                    b.ToTable("InstructorFieldofSpecializations");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.Requirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EducationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VarChar");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.WhatYouWillLearn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EducationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VarChar");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.ToTable("WhatYouWillLearns");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.CourseContent", b =>
                {
                    b.HasOne("Migfer_Kariyer.Entities.Education", "Education")
                        .WithMany("CourseContents")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.Education", b =>
                {
                    b.HasOne("Migfer_Kariyer.Entities.Feature", "Feature")
                        .WithMany("Educations")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Migfer_Kariyer.Entities.Instructor", "Instructor")
                        .WithMany("Educations")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.InstructorFieldofSpecialization", b =>
                {
                    b.HasOne("Migfer_Kariyer.Entities.FieldofSpecialization", "FieldofSpecialization")
                        .WithMany("InstructorFieldofSpecializations")
                        .HasForeignKey("FieldofSpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Migfer_Kariyer.Entities.Instructor", "Instructor")
                        .WithMany("InstructorFieldofSpecializations")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FieldofSpecialization");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.Requirement", b =>
                {
                    b.HasOne("Migfer_Kariyer.Entities.Education", "Education")
                        .WithMany("Requirements")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.WhatYouWillLearn", b =>
                {
                    b.HasOne("Migfer_Kariyer.Entities.Education", "Education")
                        .WithMany("WhatYouWillLearns")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.Education", b =>
                {
                    b.Navigation("CourseContents");

                    b.Navigation("Requirements");

                    b.Navigation("WhatYouWillLearns");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.Feature", b =>
                {
                    b.Navigation("Educations");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.FieldofSpecialization", b =>
                {
                    b.Navigation("InstructorFieldofSpecializations");
                });

            modelBuilder.Entity("Migfer_Kariyer.Entities.Instructor", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("InstructorFieldofSpecializations");
                });
#pragma warning restore 612, 618
        }
    }
}
